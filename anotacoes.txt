=============================================================================
=                                                                           = 
=                              GIT                                          =
=                                                                           =
=============================================================================
para configurar o usuário no git
git config --global user.name "Ruy"

para configurar o email no git
git config --global user.email "ruy1984@gmail.com"

para configurar seu editor no git
git config --global core.editor notepad++

para listar as configurações do git
git config --list

para iniciar o git, dentro da pasta que você deseja pelo cmd.
git init

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> STATUS DOS ARQUIVOS <<<<<<<<<<<<<<<<<<<<<<<<<<<<<
| UNTRACKED -> AINDA NÃO FOI VISTO PELO GIT                                       |
| UNMODIFIED -> AINDA NÃO FOI MODIFICADO                                          |
| MODIFED -> ARQUIVO MODIFICADO MAS AINDA NÃO FOI LEVADO PARA SER SALVO EM IMAGEM |
| STAGED -> ARQUIVO PRONTO PARA SER COMITADO                                      |
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

quando modifica um arquivo que já foi comitado, precisa adicionar ele pra conseguir dar commit.



git add nome do arquivo  -> vai incluir o arquivo

git add --all :/ -> para subir pastas e subpastas 

git status -> vai exibir o status dos arquivos que você tem no git

git commit -m "Mensagem"  -> vai comitar o arquivo e adicionar um comentário ( -m)

git commit -am "Mensagem" -> vai adicionar todos os arquivos modificados

git log -> usado para ver o log dos arquivos

git log -- decorate -> mostra algumas informações a mais.

git log --author="Ruy" -> vai buscar todos os commits que tem como autor o Ruy

git shortlog -> mostra em ordem ordem alfabética os autores, quantos commits tem, quais commits.

git shortlog -sn -> mostra a quantidade de commit por author.

git log --graph -> mostra em formato de "grafico" o que está acontecendo com os branches e versões

git show código_da_hash -> vai exibir o que aconteceu nela
 
------- git diff

git diff -> exibe o que foi modificado no arquivo antes de fazer o commit.
git diff --name only -> exibe somente o nome do arquivo que foi modificado

git commit -am "acoes" -> faz o comitt do arquivo que você deseja

git checkout nome.arquivo -> vai excluir a ultima modificação em arquivo ainda não comitado

git reset HEAD -> quando add o arquivo porém deseja voltar antes de dar commit, ele vai fazer uma exclusao da última alteração, só fazer um
git checkout para excluir em definitivo as últimas alterações

>>>>> git reset <<<<< sintaxe git reset -- hard hash anterior a que deseja resetar
git reset --soft  -> vai voltar o commit, deixa o arquivo em staged pronto para ser comitado novamente
git reset --mixed -> vai voltar o commit, deixa o arquivo antes do staged no status modifed, consigo editar ou fazer checkout
git reset -- hard -> vai ignorar todo que subiu no commit. Seleciona a hash que você deseja deixar


=============================================================================
=                                                                           = 
=                              GITHUB                                       =
=                                                                           =
=============================================================================

Como gerar chave
https://docs.github.com/pt/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

https://docs.github.com/pt/authentication/connecting-to-github-with-ssh


Local que a chave fica salva.
Chave privada in C:\Users\Ruy/.ssh/id_rsa.
Chave publica C:\Users\Ruy/.ssh/id_rsa.pub.

como adicionar a chave SSH no github
https://docs.github.com/pt/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account

>>>>>>>>>> criar um repositório <<<<<<<<<<<<<<<
no menu + ao lado do usuário, selecionar a opção incluir repositório

https://github.com/RuyTeixeira/Aulas-Git

…or push an existing repository from the command line quando já tem repositório local

git remote add origin https://github.com/RuyTeixeira/Aulas-Git.git -> adiciona um repositório remoto com nome origin e o endereço do repositório

git remote -> para visualizar o repositório que está associado como remoto

git remove -v -> busca mais detalhes sobre esse repositório

git branch -M main -> não utilizei, mas serve para renomear a branch para Main ao invés de Master 

git push -u origin master ->  conecta efetivamente o git local (masters) com o github (origin)

git push origin master -> git push diretorio pra onde quero ir (origin) e o branch

git clone git@github.com:RuyTeixeira/Aulas-Git.git -> g clone mais  a url do repositorio para clonar 

FORK -> no github existe a opção de fazer uma cópia de um repositório de outra pessoa, para isso é utilizada a opção fork

>>>>> CRIAR BRANCH <<<<<
git checkout -b nome_do_branch -> cria um branch (-b indica isso).
